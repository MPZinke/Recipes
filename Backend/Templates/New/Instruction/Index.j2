<h3>
	Recipe Instructions
</h3>
<div
  id="recipe_instructions-div"
>
	<div
	  class="content"
	>
		<button
			type="button"
			onclick="add_step_list(this.parentNode, true);"
		>
			+ Add List
		</button>
		<button
		 id="test"
			type="button"
			onclick="add_section_dictionary(this.parentNode, true);"
		>
			+ Add Section
		</button>
	</div>
</div>

<script>
	// —————————————————————————————————————————————— ISNTRUCTION  —————————————————————————————————————————————— //

	function add_section_dictionary(button, replace=false)
	{
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", `/new/instruction/section-dictionary`, false);
		xmlhttp.send();
		if(xmlhttp.status == 400)
		{
			alert('There was an error 400');
		}
		else if(xmlhttp.status != 200)
		{
			alert('add_new_recipe_ingredient_html::something else other than 200 was returned');
		}

		if(replace)
		{
			const parent = button.parentNode.querySelector(".content");
			console.log(typeof parent)
			for(let x = parent.children.length; x > 0; x--)
			{
				parent.removeChild(parent.children[x-1]);
			}
		}

		const fragment = document.createRange().createContextualFragment(xmlhttp.responseText)
		button.parentNode.querySelector(".content").appendChild(fragment);
	}


	function add_section(button, replace=false)
	{
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", `/new/instruction/section`, false);
		xmlhttp.send();
		if(xmlhttp.status == 400)
		{
			alert('There was an error 400');
		}
		else if(xmlhttp.status != 200)
		{
			alert('add_new_recipe_ingredient_html::something else other than 200 was returned');
		}

		if(replace)
		{
			const parent = button.parentNode.querySelector(".content");
			console.log(typeof parent)
			for(let x = parent.children.length; x > 0; x--)
			{
				parent.removeChild(parent.children[x-1]);
			}
		}

		const fragment = document.createRange().createContextualFragment(xmlhttp.responseText)
		button.parentNode.querySelector(".content").appendChild(fragment);
	}


	function add_step_list(button, replace=false)
	{
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", `/new/instruction/step-list`, false);
		xmlhttp.send();
		if(xmlhttp.status == 400)
		{
			alert('There was an error 400');
		}
		else if(xmlhttp.status != 200)
		{
			alert('add_new_recipe_ingredient_html::something else other than 200 was returned');
		}

		if(replace)
		{
			const parent = button.parentNode.querySelector(".content");
			console.log(typeof parent)
			for(let x = parent.children.length; x > 0; x--)
			{
				parent.removeChild(parent.children[x-1]);
			}
		}

		const fragment = document.createRange().createContextualFragment(xmlhttp.responseText)
		button.parentNode.querySelector(".content").appendChild(fragment);
	}


	function add_step(button, replace=false)
	{
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", `/new/instruction/step`, false);
		xmlhttp.send();
		if(xmlhttp.status == 400)
		{
			alert('There was an error 400');
		}
		else if(xmlhttp.status != 200)
		{
			alert('add_new_recipe_ingredient_html::something else other than 200 was returned');
		}

		if(replace)
		{
			const parent = button.parentNode.querySelector(".content");
			console.log(typeof parent)
			for(let x = parent.children.length; x > 0; x--)
			{
				parent.removeChild(parent.children[x-1]);
			}
		}

		const fragment = document.createRange().createContextualFragment(xmlhttp.responseText)
		button.parentNode.querySelector(".content").appendChild(fragment);
	}

	console.log(typeof document.getElementById("test"))
</script>
