
<!----------------------------------------------------------------------------------------------------------------------
-                                                                                                                      -
-    Created by: MPZinke on 2023.01.22                                                                                 -
-                                                                                                                      -
-    DESCRIPTION:                                                                                                      -
-    BUGS:                                                                                                             -
-    FUTURE:                                                                                                           -
-                                                                                                                      -
----------------------------------------------------------------------------------------------------------------------->


{% macro list_instructions(instructions) %}
	{% for instruction in instructions %}
		<div>
			<input type="checkbox" onclick="switch_text(this);" class="instructions" />
			<span>
				{{ instruction | replace_timer() }}
			</span>
		</div>
	{% endfor %}
{% endmacro %}


{% macro list_ingredients(ingredients) %}
	{% for ingredient in ingredients %}
		<div>
			<input type="checkbox" onclick="switch_text(this);" class="ingredients" />
			<span>
				{% if ingredient.amount() != 0.0 %}
					{{ ingredient.amount() | format_decimal() }}
				{% endif %}
				{{ ingredient.unit(ingredient.amount()) }}
				{{ ingredient.quality() }}
				<a href="/ingredient/{{ ingredient.name() }}">{{ ingredient.name() }}</a>
				{% if ingredient.notes() != "" %}
					—
					<i>
						{{ ingredient.notes() }}
					</i>
				{% endif %}
				{% if ingredient.is_required() == False %}
					<b>
						OPTIONAL
					</b>
				{% endif %}
			</span>
		</div>
	{% endfor %}
{% endmacro %}


{% extends "header.j2" %}
{% block body %}
	<title>
		{{ recipe.name() }}
	</title>
	<h1>
		{{ recipe.name() }}
	</h1>
	<table>
		<tr>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				Rating:
				{% for _ in range(recipe.rating()) %}
					✭
				{% endfor %}
				{% for _ in range(recipe.rating(), 5)  %}
					✩
				{% endfor %}
			</td>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				Serving Size:
				{{ recipe.serving_size() }}
			</td>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				<!-- This is here to add a right closing border -->
			</td>
		</tr>
		<tr>
			{% if recipe.total_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Total Time:
					{{ recipe.total_time() }}
				</td>
			{% endif %}
			{% if recipe.prep_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Prep Time:
					{{ recipe.prep_time() }}
				</td>
			{% endif %}
			{% if recipe.cook_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Cook Time:
					{{ recipe.cook_time() }}
				</td>
			{% endif %}
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				<!-- This is here to add a right closing border -->
			</td>
		</tr>
	</table>
	<p>
		{{ recipe.notes() }}
	</p>

	<h2>
		Ingredients
	</h2>
	{{ list_ingredients(recipe.ingredients()) }}
	<button id="check_button" style="margin-top:8px; margin-right:4px" onclick="check_all('ingredients');">
		Check All
	</button>
	<button id="uncheck_button" style="margin-top:8px" onclick="uncheck_all('ingredients');">
		Uncheck All
	</button>

	<h2>
		Instructions
	</h2>
	{% with instructions = recipe.instructions() %}
		{% if instructions.__class__.__name__ == "list" %}
			{{ list_instructions(instructions) }}
		{% elif instructions.__class__.__name__ == "dict" %}
			{% for section, steps in instructions.items() %}
				<h3>
					{{ section }}
				</h3>
				{{ list_instructions(steps) }}
			{% endfor %}
		{% endif %}
		<button id="check_button" style="margin-top:8px; margin-right:4px" onclick="check_all('instructions');">
			Check All
		</button>
		<button id="uncheck_button" style="margin-top:8px;" onclick="uncheck_all('instructions');">
			Uncheck All
		</button>
	{% endwith %}

	<script>
		function switch_text(checkbox)
		{
			const instruction_div = checkbox.parentElement;
			if(instruction_div.style.color != "var(--disabled-text-color)")
			{
				disable_text(checkbox);
			}
			else
			{
				enable_text(checkbox);
			}
		}


		function disable_text(checkbox)
		{
			const instruction_div = checkbox.parentElement;
			instruction_div.style.color = "var(--disabled-text-color)";
			checkbox.checked = true;
		}


		function enable_text(checkbox)
		{
			const instruction_div = checkbox.parentElement;
			instruction_div.style.color = "var(--text-color)";
			checkbox.checked = false;
		}


		function check_all(class_name)
		{
			const checkboxes = document.getElementsByClassName(class_name);
			for(let x = 0; x < checkboxes.length; x++)
			{
				disable_text(checkboxes[x]);
			}
		}


		function uncheck_all(class_name)
		{
			const checkboxes = document.getElementsByClassName(class_name);
			for(let x = 0; x < checkboxes.length; x++)
			{
				enable_text(checkboxes[x]);
			}
		}
	</script>
{% endblock %}