
<!----------------------------------------------------------------------------------------------------------------------
-                                                                                                                      -
-    Created by: MPZinke on 2023.01.22                                                                                 -
-                                                                                                                      -
-    DESCRIPTION:                                                                                                      -
-    BUGS:                                                                                                             -
-    FUTURE:                                                                                                           -
-                                                                                                                      -
----------------------------------------------------------------------------------------------------------------------->


{% macro checkbox_list(list, span_macro, prefix="") %}
	{% if list.__class__.__name__ == "dict" %}
		<div>
			{% for section, section_list in list.items() %}
				{% with section = prefix+"::"+section if(prefix) else section %}
					<h3>
						{{ section }}
					</h3>
					{{ checkbox_list(section_list, span_macro, section) }}
				{% endwith %}
			{% endfor %}
		</div>

	{% elif list.__class__.__name__ == "list" %}
		{% if list | length > 1 %}
			<input id="{{ prefix | urlencode }}-{{ span_macro.name }}-checkbox" type="checkbox"
			  onclick="switch_all(this, '{{ prefix | urlencode }}-{{ span_macro.name }}');"
			/>
		{% endif %}
		{% for item in list %}
			<div>
				<input type="checkbox" onclick="switch_text(this);"
				  class="{{ prefix | urlencode }}-{{ span_macro.name }}"
				/>
				<span>
					{{ span_macro(item) }}
				</span>
			</div>
		{% endfor %}
	{% endif %}

{% endmacro %}


{% macro list_ingredient(ingredient) %}
	{% if ingredient.amount() != 0.0 %}
		{{ ingredient.amount() | format_decimal() }}
	{% endif %}

	{{ ingredient.unit(ingredient.amount()) }}
	{{ ingredient.quality() }}
	<a href="/ingredient/{{ ingredient.name() }}">{{ ingredient.name() }}</a>

	{% if ingredient.notes() != "" %}
		—
		<i>
			{{ ingredient.notes() }}
		</i>
	{% endif %}

	{% if ingredient.is_required() == False %}
		<b>
			OPTIONAL
		</b>
	{% endif %}
{% endmacro %}


{% macro list_instruction(instruction) %}
	{{ instruction }}
{% endmacro %}


{% extends "header.j2" %}
{% block body %}
	<title>
		{{ recipe.name() }}
	</title>
	<h1>
		{{ recipe.name() }}
	</h1>
	<table>
		<tr>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				Rating:
				{% for _ in range(recipe.rating()) %}
					✭
				{% endfor %}
				{% for _ in range(recipe.rating(), 5)  %}
					✩
				{% endfor %}
			</td>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				Servings:
				<input type="number" id="servings_input" style="width:63px" min="1" value="{{ recipe.serving_size() }}"
				  onchange="update_servings(this);"
				/>
			</td>
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				<!-- This is here to add a right closing border -->
			</td>
		</tr>
		<tr>
			{% if recipe.total_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Total Time:
					{{ recipe.total_time() }}
				</td>
			{% endif %}
			{% if recipe.prep_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Prep Time:
					{{ recipe.prep_time() }}
				</td>
			{% endif %}
			{% if recipe.cook_time().total_seconds() != 0 %}
				<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
					Cook Time:
					{{ recipe.cook_time() }}
				</td>
			{% endif %}
			<td style="border-left: 1px solid #cdd0d4; padding-left: 8px; padding-right: 8px;">
				<!-- This is here to add a right closing border -->
			</td>
		</tr>
	</table>
	<p>
		{{ recipe.notes() }}
	</p>

	<h2>
		Ingredients
	</h2>
	{{ checkbox_list(recipe.ingredients(), list_ingredient) }}

	<h2>
		Instructions
	</h2>
	{{ checkbox_list(recipe.instructions(), list_instruction) }}

	<br><br>
	<button onclick="history.back()">
		Back
	</button>

	<script>
		function update_servings(element)
		{
			const urlParams = new URLSearchParams(window.location.search);
			const [current_numerator, current_denominator] = (urlParams.get("multiplier") || "1/1").split("/");
			const current_servings = {{ recipe.serving_size() }};
			const new_servings = element.value;

			const new_numerator = current_numerator * new_servings;
			const new_denominator = current_denominator * current_servings;
			const new_multiplier = `${new_numerator}/${new_denominator}`;
			window.location.href = `${window.location.href.split('?')[0]}?multiplier=${new_multiplier}`;
		}

		function switch_text(checkbox)
		{
			const section_checkbox_class = checkbox.classList[0];
			const all_sections_checkboxes = Array.from(document.getElementsByClassName(section_checkbox_class));
			if(all_sections_checkboxes.length > 1)
			{
				const sections_master_checkbox = document.getElementById(`${section_checkbox_class}-checkbox`);
				sections_master_checkbox.checked = all_sections_checkboxes.every((checkbox) => checkbox.checked);
			}
			
			const instruction_div = checkbox.parentElement;
			if(instruction_div.style.color != "var(--disabled-text-color)")
			{
				disable_text(checkbox);
			}
			else
			{
				enable_text(checkbox);
			}
		}


		function disable_text(checkbox)
		{
			const instruction_div = checkbox.parentElement;
			instruction_div.style.color = "var(--disabled-text-color)";
			checkbox.checked = true;
		}


		function enable_text(checkbox)
		{
			const instruction_div = checkbox.parentElement;
			instruction_div.style.color = "var(--text-color)";
			checkbox.checked = false;
		}


		function switch_all(element, class_name)
		{
			const checkboxes = Array.from(document.getElementsByClassName(class_name));
			checkboxes.forEach(
				checkbox =>
				{
					if(element.checked)
					{
						disable_text(checkbox);
					}
					else
					{
						enable_text(checkbox);
					}
				}
			);
		}
	</script>
{% endblock %}