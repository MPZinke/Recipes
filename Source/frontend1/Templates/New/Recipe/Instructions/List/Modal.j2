<script>
	Recipe.Instructions.List = {};  // Initialize namespace `Recipe.Instructions.Modal`
	Recipe.Instructions.List.INSTRUCTIONS = {};  // Initialize namespace `Recipe.Instructions.Modal.List`
	Recipe.Instructions.List.Modal = {};  // Initialize namespace `Recipe.Instructions.List.Modal`

	Recipe.Instructions.List.Modal.NEW_LIST_ITEM_TEXTAREA = undefined;
</script>

<div
  class="modal modal-xl fade"
  id="Recipe_Instructions_List_Modal-new_Instruction_list_item-modal"
  aria-hidden="true"
  tabindex="-1"
>
	<div
	  class="modal-dialog modal-dialog-centered"
	>
		<div
		  class="modal-content"
		>
			<div
			  class="modal-header"
			>
				<h1
				  class="modal-title fs-5"
				>
					New Instruction
				</h1>
				<button
				  type="button"
				  class="btn-close"
				  data-bs-dismiss="modal"
				  aria-label="Close"
				  onclick="Recipe.Instructions.show_type_selection_buttons();"
				></button>
			</div>
			<div
			  class="modal-body"
			>
				<textarea
				  id="Recipe_Instructions_List_Modal-new_list_item-textarea"
				  class="form-control"
				></textarea>
			</div>
			<div
			  class="modal-footer"
			>
				<button
				  class="btn btn-primary"
				  data-bs-dismiss="modal"
				  onclick="
				    let uuid4 = Recipe.uuid4();
				    Recipe.Instructions.List.Modal.add_Instruction_to_Recipe_json(uuid4);
				    Recipe.Instructions.List.Modal.add_Instruction_to_new_Instructions(uuid4);"
				>
					Add To List
				</button>
			</div>
		</div>
	</div>
</div>


<script>
	Recipe.Instructions.List.Modal.NEW_LIST_ITEM_TEXTAREA = 
	  document.getElementById("Recipe_Instructions_List_Modal-new_list_item-textarea");


	Recipe.Instructions.List.Modal.add_Instruction_to_Recipe_json =
	function add_Instruction_to_Recipe_json(uuid4)
	{
		if(Recipe.NEW_RECIPE.Instructions === undefined)
		{
			Recipe.NEW_RECIPE.Instructions = {};
		}

		Recipe.NEW_RECIPE.Instructions[uuid4] = Recipe.Instructions.List.Modal.NEW_LIST_ITEM_TEXTAREA.value;
	};


	Recipe.Instructions.List.Modal.add_Instruction_to_new_Instructions =
	function add_Instruction_to_new_Instructions(uuid4)
	{
		const instruction = {[uuid4]: Recipe.NEW_RECIPE.Instructions[uuid4]};

		// ———— ADJUST UI ———— //
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "/new/recipe/instruction/list", false);
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		xmlhttp.send(JSON.stringify(instruction));
		if(xmlhttp.status == 400)
		{
			return alert('There was an error 400');
		}
		else if(xmlhttp.status != 200)
		{
			return alert('add_new_recipe_ingredient_html::something else other than 200 was returned');
		}

		// Add built data to page
		Recipe.Instructions.NEW_INSTRUCTION_LIST_UL.appendChild(html_to_element(xmlhttp.responseText));
		Recipe.Instructions.List.Modal.NEW_LIST_ITEM_TEXTAREA.value = "";
	};
</script>
